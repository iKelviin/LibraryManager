@page "/Login"
@using LibraryManager.Site.Shared


@layout Layout.NoAuthLayout
@inject NavigationManager NavigationManager
@inject CustomAuthenticationStateProvider Auth

<PageTitle>Acessar</PageTitle>


<div class="row justify-content-center">
    <div class="col-md-8 col-lg-6 col-xl-5">
        <div class="card mt-4 card-bg-fill card-shadow-rounded">

            <div class="card-body p-4">
                <div class="d-flex align-items-center justify-content-center  mt-3">
                    <img src="assets/images/user.png" height="100">
                </div>
                <div class="text-center mt-2">
                    <h5 class="text-primary">Bem-vindo!</h5>
                    <p class="text-muted">Acesse sua conta.</p>
                </div>
                <div class="p-2 mt-4">
                    <StatusMessage Message="@errorMessage" />
                    <EditForm Model="Input" method="post" OnValidSubmit="LoginUser" FormName="login">
                        <DataAnnotationsValidator />

                        <div class="mb-3">
                            <label for="email" class="form-label">E-mail</label>
                            <InputText @bind-Value="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="Digite seu e-mail" id="email"/>
                            <ValidationMessage For="() => Input.Email" class="invalid-feedback" />
                        </div>

                        <div class="mb-3">
                            <div class="float-end">
                                <a href="Account/ForgotPassword" class="text-muted">Esqueceu a senha?</a>
                            </div>
                            <label for="password" class="form-label">Senha</label>
                            <div class="position-relative auth-pass-inputgroup mb-3">
                                <InputText type="password" @bind-Value="Input.Password" class="form-control pe-5 password-input" autocomplete="current-password" aria-required="true" placeholder="Digite sua senha" id="password"/>
                                <button class="btn btn-link position-absolute end-0 top-0 text-decoration-none text-muted password-addon material-shadow-none" type="button" id="password-addon"><i class="ri-eye-fill align-middle"></i></button>
                            </div>
                            <ValidationMessage For="() => Input.Password" class="invalid-feedback" />
                        </div>

                        <div class="mt-4">
                            <button class="btn btn-success w-100" type="submit">Acessar</button>
                        </div>

                    </EditForm>
                </div>
            </div>
            <!-- end card body -->
        </div>
        <!-- end card -->

        <div class="mt-4 text-center">
            <p class="mb-0">Não tem acesso? <a href="@(NavigationManager.GetUriWithQueryParameters("/register", new Dictionary<string, object?> { ["ReturnUrl"] = ReturnUrl }))">Cadastre-se</a> </p>
        </div>

    </div>
</div>

@code {
    [CascadingParameter]
    public MainLayout? Layout { get; set; }

    private string? errorMessage;

    [SupplyParameterFromForm] private User Input { get; set; } = new User();

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }
    [Inject]
    public Toastify toast { get; set; }
    
    public async Task LoginUser()
    {
        await toast.ShowInfo("Autenticando...");
        await Task.Delay(2000);
        var result = await Auth.AuthenticateUser(Input);
        if (result.IsSucces)
        {
            await toast.ShowSucess("Logado com sucesso!");
            if (string.IsNullOrEmpty(ReturnUrl))
            {
                await Task.Delay(2000);
                NavigationManager.NavigateTo("/home",true);
            }
            else
            {
                await Task.Delay(2000);
                NavigationManager.NavigateTo(ReturnUrl,true);
            }
        }
        else
        {
            await toast.ShowError("Usuario ou senha inválido!");
            Input = new User();
        }
    }
}